{
  "$schema": "https://biomejs.dev/schemas/2.1.4/schema.json",
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 100,
    "attributePosition": "auto"
  },
  "assist": {
    "actions": {
      "source": {
        "organizeImports": "on"
      }
    }
  },
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": false
  },
  "linter": {
    "enabled": true,
    "rules": {
      "complexity": {
        "noExcessiveCognitiveComplexity": {
          "level": "error",
          "options": {
            "maxAllowedComplexity": 20
          }
        },
        "noExcessiveNestedTestSuites": "error",
        "noForEach": "warn",
        "noUselessFragments": "error",
        "noVoid": "off",
        "useArrowFunction": "error",
        "useLiteralKeys": "error",
        "useOptionalChain": "error",
        "useSimplifiedLogicExpression": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noUnreachable": "error",
        "noUnusedImports": "error",
        "noUnusedVariables": "error",
        "useExhaustiveDependencies": "error",
        "useHookAtTopLevel": "error",
        "useImportExtensions": "off",
        "noNodejsModules": "off",
        "noUndeclaredVariables": "off",
        "noUndeclaredDependencies": "off"
      },
      "nursery": {},
      "performance": {
        "noAccumulatingSpread": "error",
        "noDelete": "error",
        "noBarrelFile": "off",
        "noReExportAll": "off"
      },
      "security": {
        "noGlobalEval": "error"
      },
      "style": {
        "noNegationElse": "error",
        "noNonNullAssertion": "error",
        "noParameterAssign": "error",
        "noUnusedTemplateLiteral": "error",
        "noUselessElse": "error",
        "useBlockStatements": "error",
        "useCollapsedElseIf": "error",
        "useConst": "error",
        "useDefaultParameterLast": "error",
        "useExportType": "error",
        "useImportType": "off",
        "useShorthandFunctionType": "error",
        "useSingleVarDeclarator": "error",
        "useTemplate": "error",
        "useNamingConvention": "off",
        "noRestrictedTypes": {
          "level": "error",
          "options": {
            "types": {
              "any": "Use specific types instead of any - see CLAUDE.md anti-any rule",
              "Object": "Use object instead",
              "Function": "Use explicit function signatures"
            }
          }
        },
        "noRestrictedImports": {
          "level": "warn",
          "options": {
            "paths": {
              "lodash": "Use specific lodash functions instead of the full library",
              "moment": "Use date-fns or native Date instead"
            }
          }
        }
      },
      "suspicious": {
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noConfusingVoidType": "error",
        "noConsole": "off",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noExplicitAny": "error",
        "noFallthroughSwitchClause": "error",
        "noImplicitAnyLet": "error",
        "noShadowRestrictedNames": "error",
        "useAwait": "error",
        "useDefaultSwitchClauseLast": "error",
        "noVar": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "single",
      "trailingCommas": "all",
      "semicolons": "always",
      "arrowParentheses": "always"
    }
  },
  "json": {
    "formatter": {
      "enabled": true,
      "indentStyle": "space",
      "indentWidth": 2,
      "trailingCommas": "none"
    }
  },
  "files": {
    "includes": ["src/**/*.{ts,tsx,js,jsx}", "*.{ts,tsx,js,jsx}", "scripts/**/*.{ts,tsx,js,jsx}"],
    "ignoreUnknown": true
  },
  "overrides": [
    {
      "includes": ["**/generated/**", "**/src/generated/**", "**/*.generated.ts"],
      "linter": {
        "enabled": false
      }
    },
    {
      "includes": ["**/*.test.{ts,tsx}", "**/*.spec.{ts,tsx}", "tests/**"],
      "linter": {
        "rules": {
          "suspicious": {
            "noExplicitAny": "off"
          },
          "style": {
            "noRestrictedTypes": "off"
          }
        }
      }
    }
  ]
}
